import React from "react"
import { Link, graphql } from "gatsby"

const BlogIndex = ({ data }) => {
  const { categories, types, all } = data.components;

  return (
    <div>
      <h1>Components</h1>
      {categories.map(({ fieldValue, nodes }) => (
        <div>
          {fieldValue}
        </div>
      ))}
      {types.map(({ fieldValue, nodes }) => (
        <div>
          {fieldValue}
        </div>
      ))}
      <ul>
        {all.map(({ id, fields, frontmatter }) => (
          <li key={id}>
            <Link to={fields.slug}>
              {frontmatter.title}
            </Link>
          </li>
        ))}
      </ul>
    </div>
  )
}

// MDX transforms markdown generated by gatsby-transformer-react-docgen
// This query filters out all of those markdown nodes and assumes all others
// are for page creation purposes.
export const pageQuery = graphql`
query blogIndex {
  components: allMdx(
    filter: {parent: {internal: {owner: {nin: "gatsby-transformer-react-docgen"}}}, frontmatter: {type: {}}}
  ) {
    categories: group(field: frontmatter___categories) {
      nodes {
        ...ComponentPage
      }
      fieldValue
    }
    types: group(field: frontmatter___type) {
      nodes {
        ...ComponentPage
      }
      fieldValue
    }
    all: nodes {
      ...ComponentPage
    }
  }
}

fragment ComponentPage on Mdx {
  id
  frontmatter {
    categories
    type
    title
  }
  fields {
    slug
  }
}
`

export default BlogIndex
