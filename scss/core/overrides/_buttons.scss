//
// Override Bootstrap's button definition.
// We do this to get more control over focus
// and hover states, as well as to define
// an extra button variant: btn-inverse-${color}
//

//
// Base styles
//

.btn {
  display: inline-block;
  font-family: $btn-font-family;
  font-weight: $btn-font-weight;
  color: $body-color;
  text-align: center;
  vertical-align: middle;
  user-select: none;
  background-color: transparent;
  border: $btn-border-width solid transparent;
  @include button-size($btn-padding-y, $btn-padding-x, $btn-font-size, $btn-line-height, $btn-border-radius);
  @include transition($btn-transition);

  @include hover {
    color: $body-color;
    text-decoration: none;
  }

  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    opacity: $btn-disabled-opacity;
  }
}

// Future-proof disabling of clicks on `<a>` elements
a.btn.disabled,
fieldset:disabled a.btn {
  pointer-events: none;
}


//
// Alternate buttons
//

@each $color, $value in $theme-colors {
  .btn-#{$color} {
    $background: $value;
    $border: $value;

    $hover-background: theme-color($color, "hover");
    $hover-border: theme-color($color, "hover");
    $active-background: theme-color($color, "active");
    $active-border: theme-color($color, "active");

    // Defaults
    $hover-background: darken($background, 7.5%) !default;
    $hover-border: darken($border, 10%) !default;
    $active-background: darken($background, 10%) !default;
    $active-border: darken($border, 12.5%) !default;

    @include button-variant(
      $background,
      $border,
      $hover-background,
      $hover-border,
      $active-background,
      $active-border
    );

    @include button-focus(theme-color($color, "icon"));
  }

  .btn-outline-#{$color} {
    $text-and-border: $value;

    $color-hover: theme-color($color, "hover");
    $active-background: theme-color($color, "background");
    $active-border: theme-color($color, "active");

    // Defaults
    $color-hover: color-yiq($value) !default;
    $active-background: $value !default;
    $active-border: $value !default;

    @include button-outline-variant(
      $text-and-border,
      $color-hover,
      $active-background,
      $active-border,
    );

    @include button-focus(theme-color($color, "icon"));
  }

  .btn-inverse-#{$color} {
    $text: $value;

    $active-background: theme-color($color, "background");
    $active-border: theme-color($color, "active");

    // Defaults
    $background: color-yiq($value) !default;
    $active-background: $value !default;
    $active-border: $value !default;

    @include button-inverse-variant(
      $text,
      $background,
      $active-background,
      $active-border,
    );

    @include button-focus(scale-color($background, $alpha: -20%));
  }
}

//
// Link buttons
//

// Make a button look and behave like a link
.btn-link {
  font-weight: $font-weight-normal;
  color: $link-color;
  text-decoration: $link-decoration;

  @include hover {
    color: $link-hover-color;
    text-decoration: $link-hover-decoration;
  }

  &:focus,
  &.focus {
    text-decoration: $link-hover-decoration;
    box-shadow: none;
  }

  &:disabled,
  &.disabled {
    color: $btn-link-disabled-color;
    pointer-events: none;
  }

  // No need for an active state here
}

.btn-light,
.btn-dark {
  @include button-focus(theme-color("primary", "icon"));
}


//
// Button Sizes
//

.btn-lg {
  @include button-size($btn-padding-y-lg, $btn-padding-x-lg, $btn-font-size-lg, $btn-line-height-lg, $btn-border-radius-lg);
}

.btn-sm {
  @include button-size($btn-padding-y-sm, $btn-padding-x-sm, $btn-font-size-sm, $btn-line-height-sm, $btn-border-radius-sm);
}


//
// Block button
//

.btn-block {
  display: block;
  width: 100%;

  // Vertically space out multiple block buttons
  + .btn-block {
    margin-top: $btn-block-spacing-y;
  }
}

// Specificity overrides
input[type="submit"],
input[type="reset"],
input[type="button"] {
  &.btn-block {
    width: 100%;
  }
}
